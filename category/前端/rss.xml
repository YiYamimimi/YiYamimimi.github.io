<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>每一个字节都藏着无尽的智慧与灵感，欢迎来到这场知识与思想的奇妙之旅！ • Posts by &#34;前端&#34; category</title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Mon, 02 Jan 2023 20:46:25 +0800</pubDate>
        <lastBuildDate>Mon, 02 Jan 2023 20:46:25 +0800</lastBuildDate>
        <category>Hexo</category>
        <category>教程</category>
        <category>Foo</category>
        <category>Bar</category>
        <item>
            <guid isPermalink="true">http://example.com/2023/01/02/front-end/no-title/</guid>
            <title>Excel 导入导出（前端处理：xslx）（后端处理：hutool+poi || Easy Excel ）</title>
            <link>http://example.com/2023/01/02/front-end/no-title/</link>
            <pubDate>Mon, 02 Jan 2023 20:46:25 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;excel-导入导出前端处理xslx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#excel-导入导出前端处理xslx&#34;&gt;#&lt;/a&gt; Excel 导入导出（前端处理：xslx）&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;调用文件对象的&lt;/strong&gt; &lt;strong&gt;arrayBuffer&lt;/strong&gt; 方法读取文件，然后使用 **xslx.**&lt;strong&gt;read&lt;/strong&gt; 方法解析数为 &lt;strong&gt;Excel 工作簿对象&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;readAsBinaryString&lt;/strong&gt; 和 &lt;strong&gt;readAsArrayBuffer&lt;/strong&gt; 是 &lt;strong&gt;FileReader&lt;/strong&gt; 对象的两种不同读取文件的方式：&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;创建 &lt;strong&gt;FileReader&lt;/strong&gt; 对象。使用&lt;strong&gt; FileReader&lt;/strong&gt; &lt;strong&gt;对象的读取文件方法&lt;/strong&gt;： &lt;strong&gt;readAsBinaryString&lt;/strong&gt; ，将文件读取为二进制字符串；或使用 &lt;strong&gt;readAsArrayBuffer&lt;/strong&gt; 方法会将文件读取为二进制数据缓冲区，即&lt;strong&gt; ArrayBuffer 对象。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;再使用 **xslx.**&lt;strong&gt;read&lt;/strong&gt; 方法解析数据为 Excel 工作簿对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;3. 下图为&lt;strong&gt; Excel 工作簿对象&lt;/strong&gt;实例：&lt;br /&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/01/16/Bnj6OHGy1V8TeIq.png&#34; alt=&#34;输入图片说明&#34; /&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2023/webp/32496480/1703057873177-0ebecc5d-f693-47af-9191-4f6e983747fa.webp?x-oss-process=image%2Fresize%2Cw_588%2Climit_0&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/01/16/8OATF9epYVawxur.png&#34; alt=&#34;输入图片说明&#34; /&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2024/webp/32496480/1705325153314-84eec0f5-a70b-4f40-ba5a-3b6c51fcf013.webp?x-oss-process=image%2Fresize%2Cw_720%2Climit_0&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;代码示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码示例&#34;&gt;#&lt;/a&gt; 代码示例&lt;/h2&gt;
&lt;h3 id=&#34;导入excel数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导入excel数据&#34;&gt;#&lt;/a&gt; 导入 Excel 数据&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const reader = new FileReader()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reader.readAsBinaryString(file)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reader.onload = function (e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const data = e.target.result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let wb = XLSX.read(data, &amp;#123;//Excel 工作簿对象，打印如上&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        type: &amp;#x27;binary&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const reader = new FileReader()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reader.readAsArrayBuffer(file)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reader.onload = function (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const data = e.target.result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let wb = XLSX.read(data, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        type: &amp;#x27;array&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;解析&lt;/summary&gt;&lt;div&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;创建 &lt;strong&gt;FileReader&lt;/strong&gt; 对象。&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt; FileReader&lt;/strong&gt; &lt;strong&gt;对象的读取文件方法&lt;/strong&gt;： &lt;strong&gt;readAsBinaryString&lt;/strong&gt; ，将文件读取为二进制字符串。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（使用 &lt;strong&gt;readAsArrayBuffer&lt;/strong&gt; 方法会将文件读取为二进制数据缓冲区，即&lt;strong&gt; ArrayBuffer 对象&lt;/strong&gt;）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置 &lt;strong&gt;onload&lt;/strong&gt; 回调函数，该函数在文件读取成功后触发。&lt;/li&gt;
&lt;li&gt;在回调函数中，通过 &lt;strong&gt;e.target.result&lt;/strong&gt; 获取读取文件成功的结果值，即文件的二进制数据。&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;XLSX.read&lt;/strong&gt; 方法解析&lt;strong&gt;二进制字符串&lt;/strong&gt;或&lt;strong&gt; ArrayBuffer 对象&lt;/strong&gt;为 Excel 工作簿对象&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（&lt;strong&gt;type: &#39;binary&#39;&lt;/strong&gt; 表示解析的数据类型是二进制字符串；&lt;strong&gt;type: &#39;array&#39;&lt;strong&gt; 表解析的数据类型是&lt;/strong&gt; ArrayBuffer 对象&lt;/strong&gt;）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果提供了回调函数 &lt;strong&gt;callback&lt;/strong&gt;，则调用该函数，并将解析得到的 &lt;strong&gt;workbook&lt;/strong&gt; 对象传递给回调函数。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个流程适用于在前端处理 Excel 文件，你可以在回调函数中进一步处理 &lt;strong&gt;workbook&lt;/strong&gt; 对象，比如获取工作表、将工作表转换为 JSON 等。&lt;/p&gt;
&lt;p&gt;/*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;readAsBinaryString&lt;/strong&gt; 和 &lt;strong&gt;readAsArrayBuffer&lt;/strong&gt; 是 &lt;strong&gt;FileReader&lt;/strong&gt; 对象的两种不同读取文件的方式。&lt;/p&gt;
&lt;p&gt;readAsBinaryString 方法是过时的&lt;/p&gt;
&lt;p&gt;官方推荐使用 readAsArrayBuffer 方法&lt;/p&gt;
&lt;p&gt;*/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input ref=&amp;quot;excel-upload-input&amp;quot; class=&amp;quot;excel-upload-input&amp;quot; type=&amp;quot;file&amp;quot; accept=&amp;quot;.xlsx, .xls&amp;quot; @change=&amp;quot;handleClick&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let _file = e.target.files[0];//获取input标签里的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_file.arrayBuffer().then((res) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const wb = XLSX.read(res);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;解析&lt;/summary&gt;&lt;div&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 arrayBuffer 方法，更符合现代 JavaScript 异步风格&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取 input 标签里的文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;调用文件对象的&lt;/strong&gt; &lt;strong&gt;arrayBuffer&lt;/strong&gt; 方法，该方法返回一个 Promise，该 Promise 在文件数据准备好时解析。&lt;/li&gt;
&lt;li&gt;在 &lt;strong&gt;then&lt;/strong&gt; 方法中，获取解析后的二进制数据 &lt;strong&gt;res&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;XLSX.read&lt;/strong&gt; 方法解析二进制数据，得到 &lt;strong&gt;wb&lt;/strong&gt;，这里的 &lt;strong&gt;read&lt;/strong&gt; 方法是你项目中封装的读取 Excel 数据的函数。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;h3 id=&#34;将数据封装好后传给后端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将数据封装好后传给后端&#34;&gt;#&lt;/a&gt; 将数据封装好后传给后端&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// XLSX.utils.sheet_to_json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const sheet1 = wb.Sheets.Sheet1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const _data = utils.sheet_to_json(sheet1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const wsname = wb.SheetNames[0]; //取Excel 工作簿对象的第一张表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const ws = XLSX.utils.sheet_to_json(wb.Sheets[wsname]); //将那张表转成json表格内容(实际上是数组)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//把解析出来的Excel数据，直接转成表格需要的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ws.forEach((item) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    that.lists.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //处理后端要接收的数据格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // factoryName: item[&amp;quot;工厂&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // wokhouseName: item[&amp;quot;车间&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(that.lists);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;解析&lt;/summary&gt;&lt;div&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;取 Excel 工作簿对象的第一张表&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt; XLSX.utils.sheet_to_json&lt;/strong&gt; 将那张表转成 json 表格内容&lt;/li&gt;
&lt;li&gt;可处理转化的 JSON 数据为后端所需要的格式&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;h3 id=&#34;导出数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导出数据&#34;&gt;#&lt;/a&gt; 导出数据&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let book = XLSX.utils.book_new()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let aoa = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [&amp;#x27;姓名&amp;#x27;, &amp;#x27;性别&amp;#x27;, &amp;#x27;年龄&amp;#x27;, &amp;#x27;注册时间&amp;#x27;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [&amp;#x27;张三&amp;#x27;, &amp;#x27;男&amp;#x27;, 18, new Date()],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [&amp;#x27;李四&amp;#x27;, &amp;#x27;女&amp;#x27;, 22, new Date()]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 将一个二维数组转成sheet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// aoa_to_sheet: 这个工具类最强大也最实用了，将一个二维数组转成sheet，会自动处理number、string、boolean、date等类型数据；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let sheet = XLSX.utils.aoa_to_sheet(aoa);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;XLSX.utils.book_append_sheet(book, sheet, &amp;quot;sheet1&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;XLSX.writeFile(book, `user$&amp;#123;new Date().getTime()&amp;#125;.xls`)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const wb = XLSX.utils.book_new(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let data = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123; name: &amp;quot;张三&amp;quot;, id: 100, score: 99 &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123; name: &amp;quot;张四&amp;quot;, id: 200, score: 99 &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123; name: &amp;quot;张五&amp;quot;, id: 300, score: 99 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]//转化JSON数组 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const ws = XLSX.utils.json_to_sheet(data); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;XLSX.utils.book_append_sheet(wb, ws, &amp;quot;people&amp;quot;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;XLSX.writeFile(wb, &amp;quot;test1.xlsx&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;解析&lt;/summary&gt;&lt;div&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;使用 XLSX.utils.aoa_to_sheet 方法将一个二维数组转化为一个工作表 (sheet)。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一个包含对象的数组 &lt;strong&gt;data&lt;/strong&gt;，通过 &lt;strong&gt;XLSX.utils.json_to_sheet&lt;/strong&gt; 方法将其转换为 Excel 工作表&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;strong&gt; XLSX.utils.book_new&lt;/strong&gt; 方法创建一个新的工作簿 (book)。&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt; XLSX.utils.book_append_sheet&lt;/strong&gt; 方法将之前创建的工作表添加到工作簿中，并命名为 &amp;quot;sheet1&amp;quot;。&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt; XLSX.writeFile&lt;/strong&gt; 方法将工作簿保存为一个 Excel 文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const reader = new FileReader()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reader.readAsBinaryString(file)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//onload 回调函数，该函数在文件读取成功后触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reader.onload = function (e) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //回调函数中，通过 e.target.result 获取读取文件成功的结果值，即文件的二进制数据BinaryString&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const data = e.target.result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //使用 XLSX.read 方法解析二进制数据BinaryString，type: &amp;#x27;binary为 Excel 工作簿对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let wb = XLSX.read(data, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        type: &amp;#x27;binary&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/* &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readAsBinaryString 和 readAsArrayBuffer 是 FileReader 对象的两种不同读取文件的方式。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readAsBinaryString 方法是过时的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;官方推荐使用 readAsArrayBuffer 方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const reader = new FileReader()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reader.readAsArrayBuffer(file)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reader.onload = function (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const data = e.target.result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let wb = XLSX.read(data, &amp;#123;//Excel 工作簿对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        type: &amp;#x27;array&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//————————————————————————————————————————————————————————&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input ref=&amp;quot;excel-upload-input&amp;quot; class=&amp;quot;excel-upload-input&amp;quot; type=&amp;quot;file&amp;quot; accept=&amp;quot;.xlsx, .xls&amp;quot; @change=&amp;quot;handleClick&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//使用 arrayBuffer 方法，更符合现代 JavaScript 异步风格&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let _file = e.target.files[0];//获取input标签里的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//调用文件对象的arrayBuffer方法，该方法返回一个 Promise，该 Promise 在文件数据准备好时解析&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_file.arrayBuffer().then((res) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	//在 then 方法中，获取解析后的二进制数据 res。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    const wb = read(res);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//————————————————————————————————————————————————————&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// XLSX.utils.sheet_to_json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const sheet1 = wb.Sheets.Sheet1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const _data = utils.sheet_to_json(sheet1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const wsname = wb.SheetNames[0]; //取Excel 工作簿对象的第一张表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const ws = XLSX.utils.sheet_to_json(wb.Sheets[wsname]); //将那张表转成json表格内容(实际上是 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//把解析出来的Excel数据，直接转成表格需要的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ws.forEach((item) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    that.lists.push(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //处理后端要接收的数据格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // factoryName: item[&amp;quot;工厂&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // wokhouseName: item[&amp;quot;车间&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(that.lists);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;预览vue-officeexceldocx-preview&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#预览vue-officeexceldocx-preview&#34;&gt;#&lt;/a&gt; 预览（vue-office/excel&amp;quot;……；docx-preview）&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2024/01/16/PAGosrNldZ5BSYE.png&#34; alt=&#34;输入图片说明&#34; /&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2023/png/32496480/1701781354926-92e813d6-8499-4a15-8d5e-15ce458bce36.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;上传后预览&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;vueofficeExcel v-if=&amp;quot;excelSrc&amp;quot; :src=&amp;quot;excelSrc&amp;quot; style=&amp;quot;height:500px&amp;quot;&amp;gt;&amp;lt;/vueofficeExcel&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input type=&amp;quot;file&amp;quot; @change=&amp;quot;change&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import vueofficeExcel from &amp;quot;@vue-office/excel&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import vueofficedocx from &amp;quot;@vue-office/docx&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import vueofficedpdf from &amp;quot;@vue-office/pdf&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;change(e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  let _file = e.target.files[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  const fr = new FileReader();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fr.readAsDataURL(_file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fr.onload = (e) =&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.excelSrc = e.target.result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 上传后预览（做图片缩略图）&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let fr = new FileReader(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fr.readAsDataURL(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let self = this;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fr.onload = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  self.imgbase64 = fr.result&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
docx-preview 也可用于 docx 预览&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div ref=&amp;quot;docxPreview&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import &amp;#123; renderAsync &amp;#125; from &amp;quot;docx-preview&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let _file = e.target.files[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//blob, arrayBuffer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;renderAsync(_file, this.$refs.docxPreview)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;二-excel-导入导出后端处理hutoolpoi-easy-excel&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-excel-导入导出后端处理hutoolpoi-easy-excel&#34;&gt;#&lt;/a&gt; 二、Excel 导入导出 (后端处理：hutool+poi || Easy Excel)&lt;/h1&gt;
&lt;h2 id=&#34;1-前端&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-前端&#34;&gt;#&lt;/a&gt; 1、前端&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;思路：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;导入：前端直接返回给后端&lt;strong&gt;文件对象&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;导出选中的或导出全部：&lt;strong&gt;将选中的 id 记录在 ids 数组里&lt;/strong&gt;；根据 ids 数组长度判断是选中导出还是导出全部；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;调用接口：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;导出全部的可向后端传入 ids.join (&#39;,&#39;)// 把数组转成字符串&lt;/p&gt;
&lt;p&gt;导出全部的传入用户名参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;代码示例&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;handleImport(res, file, fileList) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if (res.code === &amp;#x27;200&amp;#x27;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.$message.success(&amp;quot;操作成功&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.load(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    this.$message.error(res.msg)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exportData() &amp;#123;   // 批量导出数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if (!this.ids.length) &amp;#123;   // 没有选择行的时候，全部导出  或者根据我的搜索条件导出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    window.open(&amp;#x27;http://localhost:9090/user/export?token=&amp;#x27; + this.user.token + &amp;quot;&amp;amp;username=&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        + this.username + &amp;quot;&amp;amp;name=&amp;quot; + this.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; else &amp;#123;      // [1,2,3] =&amp;gt; &amp;#x27;1,2,3&amp;#x27;//选中的导出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let idStr = this.ids.join(&amp;#x27;,&amp;#x27;)//把数组转成字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    window.open(&amp;#x27;http://localhost:9090/user/export?token=&amp;#x27; + this.user.token + &amp;#x27;&amp;amp;ids=&amp;#x27; + idStr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;2-后端使用hutool处理excel-文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-后端使用hutool处理excel-文件&#34;&gt;#&lt;/a&gt; 2、后端使用 Hutool 处理 Excel 文件&lt;/h2&gt;
&lt;h3 id=&#34;hutool-poi是针对apache-poi的封装因此需要用户自行引入poi库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hutool-poi是针对apache-poi的封装因此需要用户自行引入poi库&#34;&gt;#&lt;/a&gt; Hutool-poi 是针对 Apache POI 的封装，因此需要用户自行引入 POI 库&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;groupId&amp;gt;cn.hutool&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;artifactId&amp;gt;hutool-all&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;version&amp;gt;5.3.7&amp;lt;/version&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;groupId&amp;gt;org.apache.poi&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;artifactId&amp;gt;poi-ooxml&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;version&amp;gt;5.2.3&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;导入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导入&#34;&gt;#&lt;/a&gt; 导入&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@PostMapping(&amp;quot;/import&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public Result importData(MultipartFile file) throws IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ExcelReader reader = ExcelUtil.getReader(file.getInputStream());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;User&amp;gt; userList = reader.readAll(User.class);//读取所有数据并转成user类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 写入数据到数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        userService.saveBatch(userList);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; catch (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return Result.error(&amp;quot;数据批量导入错误&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return Result.success();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;解析&lt;/summary&gt;&lt;div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;ExcelUtil&lt;/strong&gt; ： Hutool-poi 模块中的一个工具类，用于处理 Excel 文件的读写。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 &lt;strong&gt;ExcelUtil.getReader(file.getInputStream())&lt;/strong&gt; 获取了一个 &lt;strong&gt;ExcelReader&lt;/strong&gt; 对象&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;reader.readAll(User.class)&lt;/strong&gt; 读取了 Excel 中的所有数据并将其转换为 &lt;strong&gt;User&lt;/strong&gt; 类的对象列表。&lt;/li&gt;
&lt;li&gt;最后将这些对象列表通过 &lt;strong&gt;userService.saveBatch(userList)&lt;/strong&gt; 写入到数据库中。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@GetMapping(&amp;quot;/export&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void exportData(@RequestParam(required = false) String username,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       @RequestParam(required = false) String name,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       @RequestParam(required = false) String ids,//1,2,3,4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       HttpServletResponse response) throws IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ExcelWriter writer = ExcelUtil.getWriter(true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;User&amp;gt; list;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    QueryWrapper&amp;lt;User&amp;gt; queryWrapper = new QueryWrapper&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (StrUtil.isNotBlank(ids)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // 将逗号分隔的字符串转换为整数列表：[&amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;]  =&amp;gt;[1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        List&amp;lt;Integer&amp;gt; idsArr1 = Arrays.stream(ids.split(regex &amp;quot;,&amp;quot;)).map(Integer::value0f).collect(Collectors.tolist());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        queryWrapper.in(column: &amp;quot;id&amp;quot;, idsArr1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // 第一种全部导出或者条件导出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        queryWrapper.like(StrUtil.isNotBlank(username), column: &amp;quot;username&amp;quot;, username);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        queryWrapper.like(StrUtil.isNotBlank(name), column: &amp;quot;name&amp;quot;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list = userService.list(queryWrapper);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 将查询到的用户数据写入 Excel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writer.write(list, true);//告知那些key是头，让后把key一样的value放在同一列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 设置浏览器响应的格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;response.setContentType(&amp;quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;response.setHeader(&amp;quot;Content-Disposition&amp;quot;, &amp;quot;attachment;filename=&amp;quot; + URLEncoder.encode(&amp;quot;用户信息表&amp;quot;, &amp;quot;UTF-8&amp;quot;) + &amp;quot;.xlsx&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ServletOutputStream out = response.getOutputStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writer.flush(out, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;out.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writer.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;解析&lt;/summary&gt;&lt;div&gt;
&lt;blockquote&gt;
&lt;p&gt;判断前端是否有传过来 ids，有就将其转成数组并 queryWrapper 查询出，没有就根据其他条件查询出数据列表&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 ExcelWriter 对象，参数为是否是 XLSX 格式&lt;/li&gt;
&lt;li&gt;将查询到的用户数据写入 Excel，并告知那些 key 是表头，让后把 key 一样的 value 放在同一列&lt;/li&gt;
&lt;li&gt;设置浏览器响应的格式和文件名&lt;/li&gt;
&lt;li&gt;通过 &lt;strong&gt;writer.flush(out, true)&lt;/strong&gt; 将 Excel 数据输出到浏览器。&lt;/li&gt;
&lt;li&gt;最后关闭输出流和 ExcelWriter 对象&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;h3 id=&#34;如何给导出的excel表头设置中文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何给导出的excel表头设置中文&#34;&gt;#&lt;/a&gt; 如何给导出的 excel 表头设置中文？&lt;/h3&gt;
&lt;p&gt;只需要在实体类的属性上面加一个注解 @Alias (&amp;quot;中文&amp;quot;)&lt;br /&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/01/16/sPVjA85DLTYcekw.png&#34; alt=&#34;输入图片说明&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;list里的对象有键值对键为表头值为表头下的内容&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#list里的对象有键值对键为表头值为表头下的内容&#34;&gt;#&lt;/a&gt; list 里的对象有键值对，键为表头，值为表头下的内容&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;查询出来的 list 里是一条条 user 对象，所以有键值对&lt;br /&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/01/16/fesVv3dWSytCnor.png&#34; alt=&#34;输入图片说明&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2MuaHV0b29sLmNuL3BhZ2VzL0V4Y2VsV3JpdGVyLyNfMi0lRTUlODYlOTklRTUlODclQkFtYXAlRTYlOTUlQjAlRTYlOEQlQUU=&#34;&gt;Excel 生成 - ExcelWriter | Hutool&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;map 数据的写法&lt;br /&gt;
&lt;img data-src=&#34;https://s2.loli.net/2024/01/16/PtLFrJlR7Ei1O8N.png&#34; alt=&#34;输入图片说明&#34; /&gt;&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@GetMapping(&amp;quot;/export&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public void exportData(@RequestParam(required = false) String username,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       @RequestParam(required = false) String name,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       @RequestParam(required = false) String ids,//1,2,3,4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                       HttpServletResponse response) throws IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ExcelWriter writer = ExcelUtil.getWriter(true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;User&amp;gt; list;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    QueryWrapper&amp;lt;User&amp;gt; queryWrapper = new QueryWrapper&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (StrUtil.isNotBlank(ids)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // 将逗号分隔的字符串转换为整数列表：[&amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;]  =&amp;gt;[1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        List&amp;lt;Integer&amp;gt; idsArr1 = Arrays.stream(ids.split(regex &amp;quot;,&amp;quot;)).map(Integer::value0f).collect(Collectors.tolist());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        queryWrapper.in(column: &amp;quot;id&amp;quot;, idsArr1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // 第一种全部导出或者条件导出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        queryWrapper.like(StrUtil.isNotBlank(username), column: &amp;quot;username&amp;quot;, username);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        queryWrapper.like(StrUtil.isNotBlank(name), column: &amp;quot;name&amp;quot;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list = userService.list(queryWrapper);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 将查询到的用户数据写入 Excel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writer.write(list, true);//告知那些key是头，让后把key一样的value放在同一列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 设置浏览器响应的格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;response.setContentType(&amp;quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;response.setHeader(&amp;quot;Content-Disposition&amp;quot;, &amp;quot;attachment;filename=&amp;quot; + URLEncoder.encode(&amp;quot;用户信息表&amp;quot;, &amp;quot;UTF-8&amp;quot;) + &amp;quot;.xlsx&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ServletOutputStream out = response.getOutputStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writer.flush(out, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;out.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writer.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@PostMapping(&amp;quot;/import&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public Result importData(MultipartFile file) throws IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ExcelReader reader = ExcelUtil.getReader(file.getInputStream());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;User&amp;gt; userList = reader.readAll(User.class);//读取所有数据并转成user类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 写入数据到数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        userService.saveBatch(userList);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; catch (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return Result.error(&amp;quot;数据批量导入错误&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return Result.success();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
